name: $(Date:yyyy-MM-dd)$(Rev:.r) mobile automation run
resources:
  repositories:
    - repository: self
      type: git
      name: RaceTrac Portfolio/mobile-taf
      ref: master
      trigger:
        - master
    - repository: ios
      type: git
      name: RaceTrac Portfolio/racetrac-ios-app
      ref: release/5.0.0
      trigger:
        branches:
          include:
            - release/*
            - master
    - repository: android
      type: git
      name: RaceTrac Portfolio/racetrac-android-app
      ref: develop

schedules:
  - cron: "0 3 * * Mon-Fri"
    displayName: Regression Run every night
    branches:
      include:
      - master
    always: true

variables:
  NODE_TLS_REJECT_UNAUTHORIZED: 0

pool:
  name: MacOs

stages:
  - stage: Test_IOS
    condition: or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'))
    variables:
      JAVA_HOME: "/Users/tfsuser/OpenJDK8U/jdk8u292-b10/Contents/Home"
    jobs:
      - job: buildIos
        steps:
          - checkout: ios
          - script: 'sh ./Scripts/build_distirbution/build_app_for_automation.sh'
            displayName: 'Command Line Script'
            timeoutInMinutes: 240
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: '$(Build.Repository.LocalPath)/build/Build/Products/Debug-iphonesimulator/Development.app'
              Contents: |
                **/*.*
                **/*.app
                **
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: build'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: development.app
      - job: TestIos
        dependsOn: buildIos
        timeoutInMinutes: 240
        steps:
          - checkout: self
          - script: xcrun simctl shutdown all && xcrun simctl erase all
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'Development.app'
              downloadPath: '$(Build.Repository.LocalPath)/src/main/resources/apk/'
          - script: appium -p 4724 & mvn clean test -Dtest.config=ios
          - script: mvn allure:report
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/TEST-*.xml'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.Repository.LocalPath)/target/site/allure-maven-plugin'
              ArtifactName: 'IOS report'
              publishLocation: 'Container'

  - stage: Test_Android
    condition: or(eq(variables['Build.Reason'], 'Schedule'), eq(variables['Build.Reason'], 'Manual'))
    jobs:
      - job: BuildAndroid
        pool:
          name: default
          demands:
            - AndroidSDK
            - java
            - JDK
        steps:
          - checkout: android
          - task: Gradle@2
            displayName: 'build apk'
            inputs:
              gradleWrapperFile: gradlew.bat
              options: '--info'
              gradleOptions: '-Xmx4096m'
              tasks: 'clean assemblePreprodDebug'
              publishJUnitResults: false
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
            inputs:
              SourceFolder: '$(Build.Repository.LocalPath)/presentation/build/outputs/apk'
              Contents: |
                **/*.apk
              TargetFolder: '$(build.artifactstagingdirectory)'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: build'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: app.apk
      - job: TestAndroid
        dependsOn: BuildAndroid
        timeoutInMinutes: 240
        variables:
          JAVA_HOME: "/Users/tfsuser/OpenJDK8U/jdk8u292-b10/Contents/Home"
          ANDROID_HOME: "/Users/tfsuser/Library/android/sdk"
        steps:
          - checkout: self
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'app.apk'
              downloadPath: '$(Build.Repository.LocalPath)/src/main/resources/apk/'
          - script: |
              echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-29;google_apis;arm64-v8a'
              echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n Emulator -k 'system-images;android-29;google_apis;arm64-v8a' --force
              echo $ANDROID_HOME/emulator/emulator -list-avds
          - script: appium -p 4723 & mvn clean test -Dtest.config=android
          - script: mvn allure:report
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/TEST-*.xml'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.Repository.LocalPath)/target/site/allure-maven-plugin'
              ArtifactName: 'Android report'
              publishLocation: 'Container'